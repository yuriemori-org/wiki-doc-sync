# GitHub Copilotのデザインパターン
以下は、GitHub Copilotが解釈しやすいコーディングのためのガイドラインです

- 具体的なコメント: コードの上に具体的なコメントを書くことで、Copilotが意図を理解しやすくなります。
- 具体的で説明的な命名：どのような処理、どのようなデータ構造なのかが具体的にわかるような命名を意識する
- 段階的なリクエスト: 一度に大きなコードブロックを生成するのではなく、ステップごとに小さなリクエストをすることで、より正確なコードが得られます。
- コードチャンクは小さく：KISSの原則, 単一責任の原則を意識する
